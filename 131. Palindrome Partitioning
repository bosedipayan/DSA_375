class Solution {
public:
    bool isPalindrome(int st, int e,string s)
    {
        
        while(st <= e)
        {
            if(s[st]==s[e])
            {
                st++;
                e--;
            }
            else
            {
                return false;
            }
        }
        return true;
    }
    void checkPartition(int idx,string s,vector<string> &v,vector<vector<string>> &ans)
    {
        if(idx == s.size())
        {
            ans.push_back(v);
            return;
        }
        
        for(int i=idx;i<s.size();i++)
        {
            if (isPalindrome(idx,i,s))
            {
                v.push_back(s.substr(idx,i-idx+1));
                checkPartition(i+1,s,v,ans);
                v.pop_back();
            }
        }
    }
    vector<vector<string>> partition(string s) {
        vector<vector<string>> ans;
        vector<string> v;
        checkPartition(0,s,v,ans);
        return ans;
    }
};
