bool isPalindrome(int st,int e,string s)
    {
        while(st < e)
        {
            if(s[st]==s[e])
            {
                st++;
                e--;
            }
            else
            {
                return false;
            }
        }
        return true;
    }
    
    int checkPalindrome(int i,int n,string s,vector<int> &dp)
    {
        if(i==n) return 0;
        
        if(dp[i]!=-1) return dp[i];
        
        int ans=INT_MAX;
        for(int k=i;k<n;k++)
        {
            if(isPalindrome(i,k,s))
            {
                int c = 1 + checkPalindrome(k+1,n,s,dp);
                ans=min(ans,c);
            }
        }
        return dp[i]=ans;
    }
    int palindromicPartition(string str)
    {
        // code here
        int n=str.size();
        vector<int> dp(n,-1);
        return checkPalindrome(0,n,str,dp)-1;
    }
