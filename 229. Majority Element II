class Solution {
public:
    vector<int> majorityElement(vector<int>& nums) {
        /*int n=nums.size();
        unordered_map<int,int> mp,mp1;
        
        vector<int> res;
        for(auto it:nums)
        {
            mp[it]++;
            
            if(mp[it] > n/3)
            {
                mp1[it]++;
            }
        }
        
        vector<int> ans;
        for(auto it1:mp1)
        {
            ans.push_back(it1.first);
        }
        return ans;*/
        
        // Moore Votings Algo
        int n=nums.size();
        int n1=-1,n2=-1,c1=0,c2=0;
        
        for(int i=0;i<n;i++)
        {
            if(nums[i]==n1) c1++;
            else if(nums[i]==n2) c2++;
            else if(c1==0)
            {
                n1=nums[i];
                c1=1;
            }
            else if(c2==0)
            {
                n2=nums[i];
                c2=1;
            }
            else
            {
                c1--;
                c2--;
            }
        }
        
        c1=0;
        c2=0;
        
        vector<int> ans;
        for(int i=0;i<n;i++)
        {
            if(nums[i]==n1) c1++;
            else if(nums[i]==n2) c2++;
        }
        if(c1 > n/3)
        {
            ans.push_back(n1);
        }
        if(c2 > n/3)
        {
            ans.push_back(n2);
        }
        return ans;
    }
};
