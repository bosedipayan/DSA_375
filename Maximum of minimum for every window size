class Solution
{
    public:
    //Function to find maximum of minimums of every window size.
    vector <int> maxOfMin(int arr[], int n)
    {
        // Your code here
        stack<int> st;
        vector<int> ans(n, 0);
        
        for(int i=0;i<n;i++)
        {
            while(!st.empty() && arr[st.top()]>=arr[i]){
                int tp = st.top();
                st.pop();
                int curr = 0;
                if(st.empty()){
                    curr = i;
                    ans[curr-1] = max(ans[curr-1], arr[tp]);
                }
                else{
                    curr = i-st.top()-1;
                }
                ans[curr-1] = max(ans[curr-1], arr[tp]);
            }
            st.push(i);
        }
        
        while(!st.empty())
        {
            int tp = st.top();
            st.pop();
            int curr = 0;
            if(st.empty()){
                curr = n;
            }
            else{
                curr = n-st.top()-1;
            }
            ans[curr-1] = max(ans[curr-1], arr[tp]);
        }
        
        for(int i=n-2;i>=0;i--)
        {
            ans[i] = max(ans[i], ans[i+1]);
        }
        return ans;
    }
};
