/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* reverseList(ListNode* head, ListNode* tail)
    {
        ListNode* prev=NULL;
        ListNode* cur=head;
        ListNode* next;
        
        while(cur!=tail)
        {
            next=cur->next;
            cur->next=prev;
            
            prev=cur;
            cur=next;
        }
        return prev;
    }
    ListNode* reverseKGroup(ListNode* head, int k) {
        ListNode* temp=head;
        
        for(int i=0;i<k;i++)
        {
            if(!temp) return head;
            temp=temp->next;
        }
        
        ListNode* res=reverseList(head,temp);
        head->next=reverseKGroup(temp,k);
        
        return res;
    }
};
