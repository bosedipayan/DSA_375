/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int checkDiameter(TreeNode* root, int & ans)
    {
        if(root == NULL)
        {
            return 0;
        }
        
        int l = checkDiameter(root->left, ans);
        int r = checkDiameter(root->right, ans);
        
        ans=max(ans, l+r);
        return 1+max(l,r);
    }
    int diameterOfBinaryTree(TreeNode* root) {
        int mx=0;
        
        checkDiameter(root,mx);
        return mx;
    }
};
