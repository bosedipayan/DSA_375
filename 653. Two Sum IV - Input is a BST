/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void getBST(TreeNode* root,vector<int> &v)
    {
        if(root == NULL)
        {
            return;
        }
        
        getBST(root->left, v);
        v.push_back(root->val);
        getBST(root->right, v);
    }
    bool findTarget(TreeNode* root, int k) {
        vector<int> v;
        
        getBST(root,v);
        
        unordered_map<int,int> mp;
        
        for(int i=0;i<v.size();i++)
        {
            int res=k-v[i];
            
            if(mp.find(res)!=mp.end())
            {
                return true;
            }
            
            mp[v[i]]++;
        }
        return false;
    }
};
