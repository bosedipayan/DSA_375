/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode* createBST(vector<int>& nums,int &s,int &e)
    {
        if(s >= nums.size() || nums[s] >= e)
        {
            return NULL;
        }
        
        TreeNode* node = new TreeNode(nums[s]);
        s++;
        
        node->left = createBST(nums, s, node->val);
        node->right = createBST(nums, s, e);
        
        return node;
    }
    TreeNode* bstFromPreorder(vector<int>& preorder) {
        int i=0,j=1001;
        return createBST(preorder, i, j);
    }
};
