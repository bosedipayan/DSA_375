class Solution {
public:
    /*int checkCommonSequence(int i,int j,vector<vector<int>> dp,string &text1,string &text2)
    {
        if(i<0 || j<0) return 0;
        if(dp[i][j] != -1) return dp[i][j];
        
        if(text1[i] == text2[j])
        {
            return dp[i][j] = 1+checkCommonSequence(i-1,j-1,dp,text1,text2);
        }
        return dp[i][j] = max(checkCommonSequence(i-1,j,dp,text1,text2), checkCommonSequence(i,j-1,dp,text1,text2));
    }*/
    int longestCommonSubsequence(string text1, string text2) {
        int n=text1.size();
        int m=text2.size();
        
        vector<vector<int>> dp(n+1,vector<int>(m+1, 0));
        
        //return checkCommonSequence(n-1,m-1,dp,text1,text2);
        
        for(int i=0;i<n;i++)
        {
            dp[i][0]=0;
        }
        
        for(int j=0;j<m;j++)
        {
            dp[0][j]=0;
        }
        
        for(int i=1;i<=n;i++)
        {
            for(int j=1;j<=m;j++)
            {
                if(text1[i-1] == text2[j-1])
                {
                    dp[i][j] = 1+dp[i-1][j-1];
                }
                else
                {
                    dp[i][j] = max(dp[i-1][j], dp[i][j-1]);
                }
            }
        }
        return dp[n][m];
    }
};
