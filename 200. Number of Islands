class Solution {
public:
    void dfsCheck(int row,int col,int n,int m,vector<vector<int>> &vis,vector<vector<char>>& grid)
    {
        vis[row][col]=1;
        
        int dr[]={-1,0,+1,0};
        int dc[]={0,+1,0,-1};
        for(int i=0;i<4;i++)
        {
            int nr=row+dr[i];
            int nc=col+dc[i];
            
            if(nr>=0 && nr<n && nc>=0 && nc<m && grid[nr][nc]=='1' && !vis[nr][nc])
            {
                dfsCheck(nr,nc,n,m,vis,grid);
            }
        }
    }
    int numIslands(vector<vector<char>>& grid) {
        int n=grid.size(),m=grid[0].size();
        
        vector<vector<int>> vis(n, vector<int>(m, 0));
        
        int ans=0;
        for(int i=0;i<n;i++)
        {
            for(int j=0;j<m;j++)
            {
                if(!vis[i][j] && grid[i][j]=='1')
                {
                    dfsCheck(i,j,n,m,vis,grid);
                    ans+=1;
                }
            }
        }
        return ans;
    }
};
